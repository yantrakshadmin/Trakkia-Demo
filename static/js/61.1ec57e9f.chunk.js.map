{"version":3,"sources":["hocs/formItem.hoc.js","../../common/formFields/createCP/basicDetailsCreateCP.formFields.js","forms/CreateCP/basicDetialsCreateCP.form.js"],"names":["Option","CheckboxGroup","Group","props","name","action","file","Promise","resolve","reject","setTimeout","reader","FileReader","addEventListener","result","readAsDataURL","FormItem","key","rules","kwargs","type","others","customLabel","noLabel","formOptions","FORM_ELEMENT_TYPES","INPUT","Item","label","charAt","toUpperCase","slice","size","INPUT_NUMBER","FILE_DRAG_DROP","Dragger","style","maxHeight","width","className","p1","p2","SELECT","shouldUpdate","selectOptions","map","item","index","toString","search","customTitle","value","fontSize","fontWeight","dataKeys","flexWrap","i","marginLeft","marginRight","RADIO","radioOptions","DATE","onChange","date","MONTH_PICKER","picker","MULTIPLE_CHECKBOX","checkOptions","SWITCH","valuePropName","basicDetailCreateCPFormFields","placeholder","disabled","min","BasicDetailsCreateCPForm","id","onCancel","onNext","lead","active","useState","loading","setLoading","useForm","form","dispatch","useDispatch","state","useSelector","e","data","createCPData","submit","a","ADD_CREATE_CP_DATA","useEffect","STOP_STEP_LOADING","spinning","initialValues","onFinish","layout","onFieldsChange","getFieldValue","setFieldsValue","_","ceil","round","parseInt","autoComplete","orientation","justifyContent","idx","span","formItem","justify","htmlType","onClick","ArrowRightOutlined"],"mappings":"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","file":"static/js/61.1ec57e9f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Upload,\r\n  Select,\r\n  Radio,\r\n  DatePicker,\r\n  Checkbox,\r\n  InputNumber,\r\n  message,\r\n  Switch,\r\n} from 'antd';\r\nimport {Icon} from '@ant-design/compatible';\r\nimport {FORM_ELEMENT_TYPES} from 'constants/formFields.constant';\r\n\r\nconst {Option} = Select;\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\n// const handleUplaod = (file) => {\r\n//   return new Promise(async (resolve, reject) => {\r\n//     const fileName = `nameThatIwant.type`;\r\n//     const url = await S3Fetcher.getPresignedUrl(fileName);\r\n//     resolve(url);\r\n//   });\r\n\r\nconst onCustomRequest = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    const ajaxResponseWasFine = true;\r\n\r\n    setTimeout(() => {\r\n      if (ajaxResponseWasFine) {\r\n        const reader = new FileReader();\r\n\r\n        reader.addEventListener(\r\n          'load',\r\n          () => {\r\n            resolve(reader.result);\r\n          },\r\n          false,\r\n        );\r\n\r\n        if (file) {\r\n          reader.readAsDataURL(file);\r\n        }\r\n      } else {\r\n        reject('error');\r\n      }\r\n    }, 1000);\r\n  });\r\n};\r\n\r\nconst props = {\r\n  name: 'file',\r\n  action: onCustomRequest,\r\n  // onChange(info) {\r\n  //   const {status} = info.file;\r\n  //   if (status !== 'uploading') {\r\n  //     console.log(info.file, info.fileList);\r\n  //   }\r\n  //   if (status === 'done') {\r\n  //     message.success(`${info.file.name} file uploaded successfully.`);\r\n  //   } else if (status === 'error') {\r\n  //     message.error(`${info.file.name} file upload failed.`);\r\n  //   }\r\n  // },\r\n};\r\n\r\nconst FormItem = ({key, rules, kwargs, type, others, customLabel, noLabel}) => {\r\n  let formOptions = {};\r\n  if (others) {\r\n    if (others.formOptions) {\r\n      formOptions = others.formOptions;\r\n    }\r\n  }\r\n\r\n  switch (type) {\r\n    case FORM_ELEMENT_TYPES.INPUT: {\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <Input size=\"middle\" {...kwargs} />\r\n        </Form.Item>\r\n      );\r\n    }\r\n\r\n    case FORM_ELEMENT_TYPES.INPUT_NUMBER:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <InputNumber size=\"middle\" {...kwargs} />\r\n        </Form.Item>\r\n      );\r\n\r\n    case FORM_ELEMENT_TYPES.FILE_DRAG_DROP:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <Upload.Dragger {...kwargs} {...props} style={{maxHeight: '75px', width: '150px'}}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <Icon type=\"inbox\" />\r\n            </p>\r\n            {others ? (\r\n              <>\r\n                <p className=\"ant-upload-text p-1\">{others.p1}</p>\r\n                <p className=\"ant-upload-hint p-1\">{others.p2}</p>\r\n              </>\r\n            ) : null}\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n      );\r\n\r\n    case FORM_ELEMENT_TYPES.SELECT:\r\n      return (\r\n        <Form.Item\r\n          shouldUpdate\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <Select {...kwargs}>\r\n            {others.selectOptions.map((item, index) => (\r\n              <Option\r\n                key={index.toString()}\r\n                search={item[others.customTitle]}\r\n                value={item.value || item[others.key] || item}>\r\n                {others.customTitle ? (\r\n                  <text style={{fontSize: 13, fontWeight: 'bold'}}>{item[others.customTitle]}</text>\r\n                ) : (\r\n                  item.label || item[others.key] || item\r\n                )}\r\n                {others.dataKeys ? (\r\n                  <div className=\"row\" style={{flexWrap: 'wrap'}}>\r\n                    {others.dataKeys.map((i) => (\r\n                      <text style={{fontSize: 11, marginLeft: 5, marginRight: 5}}>{item[i]}</text>\r\n                    ))}\r\n                  </div>\r\n                ) : null}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n\r\n    case FORM_ELEMENT_TYPES.RADIO:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <Radio.Group value=\"Ggg\">\r\n            {others.radioOptions.map((item) => (\r\n              <Radio key={item.value} value={item.value}>\r\n                {item.label}\r\n              </Radio>\r\n            ))}\r\n          </Radio.Group>\r\n        </Form.Item>\r\n      );\r\n\r\n    case FORM_ELEMENT_TYPES.DATE:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          {...formOptions}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}>\r\n          <DatePicker onChange={(date) => console.log(date)} />\r\n        </Form.Item>\r\n      );\r\n\r\n    case FORM_ELEMENT_TYPES.MONTH_PICKER:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          {...formOptions}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}>\r\n          <DatePicker onChange={(date) => console.log(date)} picker=\"month\" />\r\n        </Form.Item>\r\n      );\r\n\r\n    case FORM_ELEMENT_TYPES.MULTIPLE_CHECKBOX:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}\r\n          {...formOptions}>\r\n          <CheckboxGroup onChange={others.onChange}>\r\n            {others.checkOptions.map((i) => (\r\n              <Checkbox value={i.value}>{i.label}</Checkbox>\r\n            ))}\r\n          </CheckboxGroup>\r\n        </Form.Item>\r\n      );\r\n    case FORM_ELEMENT_TYPES.SWITCH:\r\n      return (\r\n        <Form.Item\r\n          key={key}\r\n          valuePropName=\"checked\"\r\n          {...formOptions}\r\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\r\n          name={key}\r\n          rules={rules}>\r\n          <Switch {...kwargs} />\r\n        </Form.Item>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default FormItem;\r\n","import { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\r\n\r\nexport const basicDetailCreateCPFormFields = [\r\n  {\r\n    key: 'sender_client',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    kwargs: {\r\n      placeholder: 'Emitter',\r\n      disabled : true,\r\n    },\r\n    customLabel: 'Emitter'\r\n  },\r\n  {\r\n    key: 'sender_location',\r\n    kwargs: {\r\n      placeholder: 'Emitter Location',\r\n      disabled : true,\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Emitter Location',\r\n  },\r\n  {\r\n    key: 'receiver',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    kwargs: {\r\n      placeholder: 'Receiver',\r\n      disabled : true,\r\n    },\r\n    customLabel: 'Receiver'\r\n  },\r\n  {\r\n    key: 'receiver_location',\r\n    kwargs: {\r\n      placeholder: 'Receiver Location',\r\n      disabled : true,\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Receiver Location',\r\n  },\r\n  {\r\n    key: 'part_name',\r\n    kwargs: {\r\n      placeholder: 'Part Name',\r\n      disabled : true,\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Part Name',\r\n  },\r\n  //parts_pm\r\n  // {\r\n  //   key: 'component_perkit',\r\n  //   kwargs: {\r\n  //     placeholder: 'Component/Kit',\r\n  //     type:'number',\r\n  //   },\r\n  //   type: FORM_ELEMENT_TYPES.INPUT,\r\n  //   others: null,\r\n  //   customLabel: 'Component/Kit',\r\n  // },\r\n  //weight\r\n  {\r\n    key: 'total_comp_weight_perkit',\r\n    kwargs: {\r\n      placeholder: 'Total Component Weight/Kit',\r\n      type:'number',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Total Component Weight/Kit',\r\n  },\r\n\r\n  {\r\n    key: 'volume_pm',\r\n    kwargs: {\r\n      placeholder: 'Total Component/Month',\r\n      disabled : true,\r\n      type:'number',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Total Component/Month',\r\n  },\r\n  {\r\n    // key: 'total_component_per_kit',\r\n    key:'component_perkit',\r\n    kwargs: {\r\n      placeholder: 'Total Component/Kit',\r\n      type:'number',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Total Component/Kit',\r\n  },\r\n\r\n  {\r\n    key: 'kit_pm',\r\n    kwargs: {\r\n      placeholder: 'Total Kit/Month',\r\n      type:'number',\r\n      disabled : true,\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Total Kit/Month',\r\n  },\r\n  {\r\n    key: 'yantra_cycle',\r\n    kwargs: {\r\n      placeholder: 'Yantra Cycle Time',\r\n      type:'number',\r\n      disabled : true,\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Yantra Cycle Time',\r\n  },\r\n  {\r\n    key: 'buffer',\r\n    kwargs: {\r\n      placeholder: 'Buffer',\r\n      type:'number',\r\n      min:0,\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Buffer (%)',\r\n  },\r\n  {\r\n    key: 'kit_usage_ratio',\r\n    kwargs: {\r\n      placeholder: 'Kit Usage Ratio',\r\n      type:'number',\r\n      disabled : true,\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Kit Usage Ratio',\r\n  },\r\n  {\r\n    key: 'kit_based_on_usage_ratio',\r\n    kwargs: {\r\n      placeholder: 'Number of Kit based on Usage Ratio',\r\n      type:'number',\r\n      disabled : true,\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Number of Kit based on Usage Ratio',\r\n  },\r\n]\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { Form, Col, Row, Button, Divider, Spin } from 'antd';\r\nimport { ArrowRightOutlined, } from '@ant-design/icons';\r\nimport formItem from 'hocs/formItem.hoc';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  ADD_CREATE_CP_DATA,\r\n  STOP_STEP_LOADING,\r\n} from 'common/actions';\r\nimport { basicDetailCreateCPFormFields } from 'common/formFields/createCP/basicDetailsCreateCP.formFields';\r\n\r\nimport _ from 'lodash';\r\n\r\nexport const BasicDetailsCreateCPForm = ({ id, onCancel,lead,onNext,active }) => {\r\n\r\n  const [loading,setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const state =  useSelector(e=>(e.data.createCPData))\r\n\r\n  const submit = async (data) =>{\r\n    setLoading(true)\r\n    await dispatch({ type:ADD_CREATE_CP_DATA,\r\n      data:{ ...data } });\r\n    setLoading(false)\r\n    if(active === 0){\r\n      onNext();\r\n    }\r\n  }\r\n\r\n  const handleFieldsChange = data => {\r\n\r\n    if(data[0]){\r\n\t\t\tif(data[0].name) {\r\n\r\n        const currentInputField = data[0].name[0];\r\n        console.log(currentInputField);\r\n\r\n        if (form.getFieldValue(\"volume_pm\") && form.getFieldValue(\"component_perkit\")) {\r\n          form.setFieldsValue({\r\n            \"kit_pm\" : _.ceil(form.getFieldValue(\"volume_pm\")/form.getFieldValue(\"component_perkit\")),\r\n          })\r\n        } else {\r\n          form.setFieldsValue({\r\n            \"kit_pm\" : 0,\r\n          })\r\n        }\r\n\r\n        if (form.getFieldValue(\"yantra_cycle\")) {\r\n          form.setFieldsValue({\r\n            \"kit_usage_ratio\" : _.round(30/form.getFieldValue(\"yantra_cycle\"),2),\r\n          })\r\n        } else {\r\n          form.setFieldsValue({\r\n            \"kit_usage_ratio\" : 0,\r\n          })\r\n        }\r\n\r\n        if (form.getFieldValue(\"kit_pm\") && form.getFieldValue(\"kit_usage_ratio\") && form.getFieldValue(\"buffer\")) {\r\n          form.setFieldsValue({\r\n            \"kit_based_on_usage_ratio\" : _.ceil(( form.getFieldValue(\"kit_pm\")/form.getFieldValue(\"kit_usage_ratio\") )*( 1+(parseInt(form.getFieldValue(\"buffer\"))/100) )),\r\n          })\r\n        } else {\r\n          form.setFieldsValue({\r\n            \"kit_based_on_usage_ratio\" : 0,\r\n          })\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  useEffect( ()=>{\r\n    if(active!==0){\r\n      form.submit()\r\n      dispatch({ type:STOP_STEP_LOADING })\r\n    }\r\n  },[active])\r\n\r\n  return (\r\n    <Spin spinning={loading}>\r\n      <Form\r\n        initialValues={{ ...state }}\r\n        onFinish={submit}\r\n        form={form}\r\n        layout='vertical'\r\n        onFieldsChange={handleFieldsChange}\r\n        // hideRequiredMark\r\n        autoComplete='off'\r\n      >\r\n        <Divider orientation='left'>Basic Details</Divider>\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {basicDetailCreateCPFormFields.slice(0, 4).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Divider orientation='left'>Part Details</Divider>\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {basicDetailCreateCPFormFields.slice(4, 14).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row justify='space-between'>\r\n          <div className='row'>\r\n            <Button type='primary' htmlType='submit' disabled>\r\n              Submit\r\n            </Button>\r\n            <div className='p-2' />\r\n            <Button type='primary' onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <Button type='link' htmlType='submit'>\r\n            <ArrowRightOutlined style={{ fontSize:30 }}  />\r\n          </Button>\r\n        </Row>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default BasicDetailsCreateCPForm;\r\n\r\n"],"sourceRoot":""}
{"version":3,"sources":["../../common/helpers/api.js","../../common/constants/enviroment.js","../../common/api/auth.js","../../common/constants/storage.js","../../common/helpers/shared.js","components/Docket/Docket.js"],"names":["axios","defaults","baseURL","DEFAULT_BASE_URL","getAccessToken","a","storage","getStorage","get","ACCESS_TOKEN","accessToken","REFRESH_TOKEN","refreshToken","Error","accessPayload","jwtDecode","Date","parseInt","exp","post","refresh","newAccessToken","data","access","set","loadAPI","url","opts","onSuccess","onFailure","error","secure","defaultData","headers","options","Authorization","res","status","undefined","loading","response","request","e","message","getJWTTokens","username","password","method","getUserMeta","createEmployee","email","first_name","last_name","createClient","retrieveClients","createProduct","req","Math","random","toString","substr","retrieveProducts","editProduct","id","retrieveProduct","deleteProduct","createKit","kit_name","kit_info","components_per_kit","kit_client","part_name","part_number","kit_type","products","active","editKit","retrieveKits","retrieveKitsClients","retrieveKit","deleteKit","createOutward","editOutward","deleteOutward","retrieveOutward","retrieveOutwardDocketEmp","createVendor","name","street","city","pincode","state","contact_person_name","contact_person_no","type","payment_terms","pan","gst","code","remarks","beneficiary_name","account_no","bank_name","ifsc","editVendor","deleteVendor","retrieveVendor","retrieveVendors","createWarehouse","editWarehouse","deleteWarehouse","retrieveWarehouse","retrieveWarehouses","editClientProfile","retrieveClientProfile","createReceiverClient","address","emitter","editReceiverClient","deleteReceiverClient","retrieveReceiverClient","retieveReceiverClients","createFlow","flow_name","flow_info","flow_type","flow_days","sender_client","receiver_client","kits","editFlow","retreiveFlow","retreiveFlows","retreiveFlowsClient","deleteFlow","createMr","delivery_required_on","flows","client_id","editMr","editAddMr","retrieveMr","retrieveAddMr","retrieveMrs","deleteMr","deleteAddMr","createDm","delivery_month","demand_flows","editDm","retrieveDm","retrieveDms","retrieveDmsClient","deleteDm","retrieveEmployeeMrsEfficient","createAllotment","transaction_no","dispatch_date","send_from_warehouse","sales_order","is_delivered","model","driver_name","driver_number","lr_number","vehicle_number","freight_charges","vehicle_type","transport_by","expected_delivery","editAllotment","retrieveAllotments","params","retrieveAllotmentsCalender","tno","deleteAllotment","createGRN","editGRN","retrieveGRN","deleteGRN","createDelivered","editDelivered","retrieveDelivered","createOutwardDeliveredDocket","editOutwardDeliveredDocket","retrieveOutwardDeliveredDocket","leadFileUpload","tpFileUpload","createReturn","editReturn","transaction_date","transaction_type","flow","warehouse","retrieveReturn","retrieveReturns","deleteReturn","createReceived","editReceived","retrieveReceived","allDelivered","allInward","allReceived","retrieveGRNBars","retrieveAllotmentReport","cname","to","from","retrieveReturnReport","retrieveAllotmentsDelivered","retrieveDocketOutwardInward","retrieveReturnDocket","retrieveReturnDocketCaleder","createLead","retrieveLeads","retrieveCP","retrievePFEP","editLead","retrieveLead","deleteLead","postAltBarcodes","postReturnBarcodes","createPFEP","deletePFEP","editPFEP","createCP","deleteCP","editCP","retrieveTestInv","createTestInv","deleteTestInv","createMRStatus","createExpense","src","retrieveExpenses","deleteExpense","retrieveExpense","editExpenseTest","window","global","Title","Docket","location","match","useState","allotment","setAllotment","total","setTotal","useEffect","len","pathname","length","slice","fetchAllotment","tot","map","alloted","alloted_quantity","kit","prod","quantity","product","priceperunit","calcTotal","b","className","process","alt","level","style","fontWeight","span","display","moment","format","idx","fontFamily","wordWrap","client_name","client_shipping_address","client_shipping_city","client_shipping_state","client_shipping_pincode","client_gst","bordered","size","flexDirection","hsn_code","short_code","textTransform","String","fromCharCode","num","n","str","Number","inWords","pageBreakInside","width","justifyContent","alignItems","padding","margin","fontSize","color","spinning","position","marginLeft","marginTop"],"mappings":"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","file":"static/js/14.01659200.chunk.js","sourcesContent":["import * as jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from '../constants/storage';\nimport { DEFAULT_BASE_URL } from '../constants/enviroment';\n\nimport { getStorage } from './shared';\n\naxios.defaults.baseURL = DEFAULT_BASE_URL;\n\nconst getAccessToken = async () => {\n  const storage = getStorage();\n\n  const accessToken = await storage.get(ACCESS_TOKEN, null);\n  const refreshToken = await storage.get(REFRESH_TOKEN, null);\n  if (!(accessToken && refreshToken)) throw Error('No user found');\n\n  const accessPayload = jwtDecode(accessToken);\n  if (new Date(parseInt(accessPayload.exp, 10) * 1000) > new Date()) return accessToken;\n\n  const {\n    data: { access: newAccessToken },\n  } = await axios.post('/api/token/refresh/', {\n    refresh: refreshToken,\n  });\n\n  await storage.set(ACCESS_TOKEN, newAccessToken);\n\n  return newAccessToken;\n};\n\nexport const loadAPI = async (url, opts = {}) => {\n  const {\n    onSuccess = (data) => data,\n    onFailure = (error) => error,\n    secure = true,\n    defaultData,\n    headers,\n    ...options\n  } = opts;\n\n  try {\n    const res = await axios(url, {\n      headers: {\n        ...(secure ? { Authorization: `Bearer ${await getAccessToken()}` } : {}),\n        ...headers,\n      },\n      ...options,\n    });\n\n    const { data, status } = res;\n    await onSuccess(data);\n    return { data, status, error: undefined, loading: false };\n  } catch (error) {\n    if (error.response) {\n      const { data, status } = error.response;\n      await onFailure(data);\n      return { data: undefined, status, error: data, loading: false };\n    }\n\n    if (error.request) {\n      const e = { message: 'error in request setup' };\n      // noinspection JSCheckFunctionSignatures\n      return { data: undefined, status: 0, error: e, loading: false };\n    }\n\n    throw Error(error);\n  }\n};\n","// export const DEFAULT_BASE_URL = 'https://packsdev.ap-south-1.elasticbeanstalk.com';\nexport const DEFAULT_BASE_URL = 'https://tbackend.trakkia.com//';\n\n//export const DEFAULT_BASE_URL = 'https://9c8d2120fd8a.ngrok.io';\n// export const DEFAULT_BASE_URL = 'https://fbe75563a46f.in.ngrok.io/';\n","import {loadAPI} from '../helpers/api';\n\nexport const getJWTTokens = ({username, password}) =>\n  loadAPI(`/api/token/`, {\n    method: 'POST',\n    data: {username, password},\n    secure: false,\n  });\n\nexport const isUserVerified = ({username}) =>\n  loadAPI(`/verification/`, {\n    params: {username},\n    secure: false,\n  });\n\nexport const verifyUser = ({username, otp}) =>\n  loadAPI('/verifyOTP/', {\n    method: 'POST',\n    data: {username, otp},\n    secure: false,\n  });\n\nexport const getUserMeta = () => loadAPI(`/user/meta/`);\n\nexport const createEmployee = ({username, email, password, first_name, last_name}) =>\n  loadAPI('/create-employee/', {\n    method: 'POST',\n    data: {username, email, password, first_name, last_name},\n    secure: false,\n  });\n\nexport const createClient = ({username, email, password, first_name, last_name}) =>\n  loadAPI('/create-client/', {\n    method: 'POST',\n    data: {username, email, password, first_name, last_name},\n    secure: false,\n  });\n\nexport const retrieveClients = () =>\n  loadAPI('/clients/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const createProduct = (req) =>\n  loadAPI('/create-product/', {\n    method: 'POST',\n    data: req,\n    secure: true,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\n\nexport const retrieveProducts = () =>\n  loadAPI('/products/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const editProduct = (id, req) => {\n  return loadAPI(`/edit-product/${id}/`, {\n    method: 'PATCH',\n    secure: true,\n    data: req,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\n};\n\nexport const retrieveProduct = (id) =>\n  loadAPI(`/edit-product/${id}`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const deleteProduct = (id) =>\n  loadAPI(`/edit-product/${id}`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const createKit = ({\n  kit_name,\n  kit_info,\n  components_per_kit,\n  kit_client,\n  part_name,\n  part_number,\n  kit_type,\n  products,\n  active,\n}) =>\n  loadAPI('/create-kit/', {\n    method: 'POST',\n    secure: true,\n    data: {\n      kit_name,\n      kit_info,\n      components_per_kit,\n      kit_client,\n      part_name,\n      part_number,\n      kit_type,\n      products,\n      active,\n    },\n  });\n\nexport const editKit = (\n  id,\n  {\n    kit_name,\n    kit_info,\n    components_per_kit,\n    kit_client,\n    part_name,\n    part_number,\n    kit_type,\n    products,\n    active,\n  },\n) =>\n  loadAPI(`/edit-kit/${id}/`, {\n    method: 'PATCH',\n    secure: true,\n    data: {\n      kit_name,\n      kit_info,\n      components_per_kit,\n      kit_client,\n      part_name,\n      part_number,\n      kit_type,\n      products,\n      active,\n    },\n  });\n\nexport const retrieveKits = () =>\n  loadAPI('/kits/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveKitsClients = () =>\n  loadAPI('/client-kits/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveKit = (id) =>\n  loadAPI(`/edit-kit/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const deleteKit = (id) =>\n  loadAPI(`/edit-kit/${id}`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const createOutward = (data) =>\n  loadAPI('create-outward/', {\n    method: 'POST',\n    secure: true,\n    data,\n  });\n\nexport const editOutward = (id, data) =>\n  loadAPI(`edit-outward/${id}/`, {\n    method: 'PATCH',\n    secure: true,\n    data,\n  });\n\nexport const deleteOutward = (id) =>\n  loadAPI(`edit-outward/${id}/`, {\n    method: 'Delete',\n    secure: true,\n  });\n\nexport const retrieveOutward = (id) =>\n  loadAPI(`edit-outward/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\nexport const retrieveOutwardDocket = (id) =>\n  loadAPI(`outwards/?id=${id}`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveOutwardDocketEmp = (id) =>\n  loadAPI(`emp-outwards/?id=${id}`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const createVendor = ({\n  name,\n  street,\n  city,\n  pincode,\n  state,\n  contact_person_name,\n  contact_person_no,\n  email,\n  type,\n  payment_terms,\n  pan,\n  gst,\n  code,\n  remarks,\n  beneficiary_name,\n  account_no,\n  bank_name,\n  ifsc,\n  active,\n}) =>\n  loadAPI('/create-vendor/', {\n    method: 'POST',\n    data: {\n      name,\n      street,\n      city,\n      pincode,\n      state,\n      contact_person_name,\n      contact_person_no,\n      email,\n      type,\n      payment_terms,\n      pan,\n      gst,\n      code,\n      remarks,\n      beneficiary_name,\n      account_no,\n      bank_name,\n      ifsc,\n      active,\n    },\n    secure: true,\n  });\n\nexport const editVendor = (\n  id,\n  {\n    name,\n    street,\n    city,\n    pincode,\n    state,\n    contact_person_name,\n    contact_person_no,\n    email,\n    type,\n    payment_terms,\n    pan,\n    gst,\n    code,\n    remarks,\n    beneficiary_name,\n    account_no,\n    bank_name,\n    ifsc,\n    active,\n  },\n) =>\n  loadAPI(`/edit-vendor/${id}/`, {\n    method: 'PATCH',\n    data: {\n      name,\n      street,\n      city,\n      pincode,\n      state,\n      contact_person_name,\n      contact_person_no,\n      email,\n      type,\n      payment_terms,\n      pan,\n      gst,\n      code,\n      remarks,\n      beneficiary_name,\n      account_no,\n      bank_name,\n      ifsc,\n      active,\n    },\n    secure: true,\n  });\n\nexport const deleteVendor = (id) =>\n  loadAPI(`/edit-vendor/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const retrieveVendor = (id) =>\n  loadAPI(`/edit-vendor/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveVendors = () =>\n  loadAPI(`/vendors/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const createWarehouse = (req) =>\n  loadAPI('/create-warehouse/', {\n    method: 'POST',\n    secure: true,\n    data: req,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\n\nexport const editWarehouse = (id, req) =>\n  loadAPI(`/edit-warehouse/${id}/`, {\n    method: 'PATCH',\n    secure: true,\n    data: req,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\n\nexport const deleteWarehouse = (id) =>\n  loadAPI(`/edit-warehouse/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const retrieveWarehouse = (id) =>\n  loadAPI(`/edit-warehouse/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveWarehouses = () =>\n  loadAPI('/warehouse/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const editClientProfile = (id, req) =>\n  loadAPI(`/client-profile/${id}/`, {\n    method: 'PATCH',\n    secure: true,\n    data: req,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\n\nexport const retrieveClientProfile = (id) =>\n  loadAPI(`/client-profile/${id}`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const createReceiverClient = ({name, city, address, emitter, pan, gst, active}) =>\n  loadAPI('/create-receiverclient/', {\n    method: 'POST',\n    data: {name, city, address, emitter, pan, gst, active},\n    secure: true,\n  });\n\nexport const editReceiverClient = (id, {name, city, address, emitter, pan, gst, active}) =>\n  // loadAPI(`/edit-receiverclient/${id}/`, {\n  loadAPI(`/edit-receiverclient/${id}/`, {\n    method: 'PATCH',\n    data: {name, city, address, emitter, pan, gst, active},\n    secure: true,\n  });\n\nexport const deleteReceiverClient = (id) =>\n  loadAPI(`/edit-receiverclient/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const retrieveReceiverClient = (id) =>\n  loadAPI(`/edit-receiverclient/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retieveReceiverClients = (id) =>\n  loadAPI(`/receiverclients/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const createFlow = ({\n  flow_name,\n  flow_info,\n  flow_type,\n  flow_days,\n  sender_client,\n  receiver_client,\n  kits,\n  active,\n}) =>\n  loadAPI('/create-flow/', {\n    method: 'POST',\n    secure: true,\n    data: {\n      flow_name,\n      flow_info,\n      flow_type,\n      flow_days,\n      sender_client,\n      receiver_client,\n      kits,\n      active,\n    },\n  });\n\nexport const editFlow = (\n  id,\n  {flow_name, flow_info, flow_type, flow_days, sender_client, receiver_client, kits, active},\n) =>\n  loadAPI(`/edit-flow/${id}/`, {\n    method: 'PATCH',\n    secure: true,\n    data: {\n      flow_name,\n      flow_info,\n      flow_type,\n      flow_days,\n      sender_client,\n      receiver_client,\n      kits,\n      active,\n    },\n  });\n\nexport const retreiveFlow = (id) =>\n  loadAPI(`/edit-flow/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retreiveFlows = () =>\n  loadAPI(`/flows/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retreiveFlowsClient = () =>\n  loadAPI(`/client-flows/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retreiveMyFlows = () =>\n  loadAPI('/myflows/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const deleteFlow = (id) =>\n  loadAPI(`/edit-flow/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const createMr = ({delivery_required_on, flows, client_id}) =>\n  loadAPI('/create-mrequets/', {\n    method: 'POST',\n    data: {delivery_required_on, flows, client_id},\n    secure: true,\n  });\n\nexport const editMr = (id, {delivery_required_on, flows}) =>\n  loadAPI(`/edit-mrequets/${id}/`, {\n    method: 'PATCH',\n    data: {delivery_required_on, flows},\n    secure: true,\n  });\n\nexport const editAddMr = (id, {delivery_required_on, flows, client_id}) =>\n  loadAPI(`/admin-mredit/${id}/`, {\n    method: 'PATCH',\n    data: {delivery_required_on, flows, client_id},\n    secure: true,\n  });\n\nexport const retrieveMr = (id) =>\n  loadAPI(`/edit-mrequets/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveAddMr = (id) =>\n  loadAPI(`/admin-mredit/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveMrs = () =>\n  loadAPI('/mrequets/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const deleteMr = (id) =>\n  loadAPI(`/edit-mrequets/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const deleteAddMr = (id) =>\n  loadAPI(`/admin-mredit/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const createDm = ({delivery_month, demand_flows, client_id}) =>\n  loadAPI('/create-demand/', {\n    method: 'POST',\n    data: {delivery_month, demand_flows, client_id},\n    secure: true,\n  });\n\nexport const editDm = (id, {delivery_month, demand_flows}) =>\n  loadAPI(`/edit-demand/${id}/`, {\n    method: 'PATCH',\n    data: {delivery_month, demand_flows},\n    secure: true,\n  });\n\nexport const editAddDm = (id, {delivery_required_on, flows, client_id}) =>\n  loadAPI(`/admin-mredit/${id}/`, {\n    method: 'PATCH',\n    data: {delivery_required_on, flows, client_id},\n    secure: true,\n  });\n\nexport const retrieveDm = (id) =>\n  loadAPI(`/edit-demand/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveAddDm = (id) =>\n  loadAPI(`/admin-mredit/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveDms = () =>\n  loadAPI('/demands/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveDmsClient = () =>\n  loadAPI('/client-demands/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const deleteDm = (id) =>\n  loadAPI(`/edit-demand/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const deleteAddDm = (id) =>\n  loadAPI(`/admin-mredit/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const retrieveEmployeeMrs = () =>\n  loadAPI('/allmrequest/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveEmployeeMrsEfficient = () =>\n  loadAPI('/allmrequest-table/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const createAllotment = ({\n  transaction_no,\n  dispatch_date,\n  send_from_warehouse,\n  sales_order,\n  flows,\n  is_delivered,\n  model,\n  driver_name,\n  driver_number,\n  lr_number,\n  vehicle_number,\n  freight_charges,\n  vehicle_type,\n  transport_by,\n  expected_delivery,\n  remarks,\n}) =>\n  loadAPI('/create-allotment/', {\n    method: 'POST',\n    data: {\n      transaction_no,\n      dispatch_date,\n      send_from_warehouse,\n      sales_order,\n      flows,\n      is_delivered,\n      model,\n      driver_name,\n      driver_number,\n      lr_number,\n      vehicle_number,\n      freight_charges,\n      vehicle_type,\n      transport_by,\n      expected_delivery,\n      remarks,\n    },\n    secure: 'true',\n  });\n\nexport const editAllotment = (\n  id,\n  {\n    dispatch_date,\n    send_from_warehouse,\n    sales_order,\n    flows,\n    model,\n    driver_name,\n    driver_number,\n    lr_number,\n    vehicle_number,\n    freight_charges,\n    vehicle_type,\n    transport_by,\n    expected_delivery,\n    remarks,\n  },\n) =>\n  loadAPI(`/edit-allotment/${id}/`, {\n    method: 'PATCH',\n    data: {\n      dispatch_date,\n      send_from_warehouse,\n      sales_order,\n      flows,\n      model,\n      driver_name,\n      driver_number,\n      lr_number,\n      vehicle_number,\n      freight_charges,\n      vehicle_type,\n      transport_by,\n      expected_delivery,\n      remarks,\n    },\n    secure: true,\n  });\n\nexport const retrieveAllotment = (id) =>\n  loadAPI(`/edit-allotment/${id}/`, {\n    methood: 'GET',\n    secure: true,\n  });\n\nexport const retrieveAllotments = (id) =>\n  loadAPI('/allotments/', {\n    method: 'GET',\n    secure: true,\n    params: {id},\n  });\n\nexport const retrieveAllotmentsCalender = (tno) =>\n  loadAPI(`/allotments-cal/?tno=${tno}`, {\n    method: 'GET',\n    secure: false,\n  });\n\nexport const deleteAllotment = (id) =>\n  loadAPI(`/edit-allotment/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const createGRN = (data) =>\n  loadAPI('/create-grn/', {\n    method: 'POST',\n    secure: true,\n    data,\n    // headers: {\n    //   'Content-Type': 'multipart/form-data  boundary=' + Math.random().toString().substr(2),\n    // },\n  });\n\nexport const editGRN = (id, data) =>\n  loadAPI(`/edit-grn/${id}/`, {\n    method: 'PATCH',\n    secure: true,\n    data,\n    // headers: {\n    //   'Content-Type': 'multipart/form-data  boundary=' + Math.random().toString().substr(2),\n    // },\n  });\n\nexport const retrieveGRN = (id) =>\n  loadAPI(`/edit-grn/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveGRNs = () =>\n  loadAPI('/grns/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const deleteGRN = (id) =>\n  loadAPI(`/edit-grn/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const createDelivered = (req) =>\n  loadAPI('/create-delivered/', {\n    method: 'POST',\n    data: req,\n    secure: true,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\nexport const editDelivered = (id, req) =>\n  loadAPI(`/e-delivered/${id}/`, {\n    method: 'PATCH',\n    data: req,\n    secure: true,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\n\nexport const retrieveDelivered = (id) =>\n  loadAPI(`/edit-delivered/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const createOutwardDeliveredDocket = (req) =>\n  loadAPI('/create-inward/', {\n    method: 'POST',\n    data: req,\n    secure: true,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\nexport const editOutwardDeliveredDocket = (id, req) =>\n  loadAPI(`/e-inward/${id}/`, {\n    method: 'PATCH',\n    data: req,\n    secure: true,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\n\nexport const retrieveOutwardDeliveredDocket = (id) =>\n  loadAPI(`/edit-inward/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const deleteOutwardDeliveredDocket = (id) =>\n  loadAPI(`/edit-inward/${id}/`, {\n    method: 'Delete',\n    secure: true,\n  });\n\nexport const leadFileUpload = (req) =>\n  loadAPI('/upload-pfep/', {\n    method: 'POST',\n    data: req,\n    secure: true,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\n\nexport const tpFileUpload = (req) =>\n  loadAPI('/upload-tp/', {\n    method: 'POST',\n    data: req,\n    secure: true,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\nexport const createReturn = (data) =>\n  loadAPI('/create-return/', {\n    method: 'POST',\n    data,\n    secure: 'true',\n  });\n\nexport const editReturn = (\n  id,\n  {\n    transaction_no,\n    transaction_date,\n    transaction_type,\n    flow,\n    kits,\n    driver_name,\n    driver_number,\n    lr_number,\n    vehicle_number,\n    freight_charges,\n    vehicle_type,\n    transport_by,\n    warehouse,\n    receiver_client,\n    remarks,\n  },\n) =>\n  loadAPI(`/edit-return/${id}/`, {\n    method: 'PATCH',\n    data: {\n      transaction_no,\n      transaction_date,\n      transaction_type,\n      flow,\n      kits,\n      driver_name,\n      driver_number,\n      lr_number,\n      vehicle_number,\n      freight_charges,\n      vehicle_type,\n      transport_by,\n      warehouse,\n      receiver_client,\n      remarks,\n    },\n    secure: 'true',\n  });\n\nexport const retrieveReturn = (id) =>\n  loadAPI(`/edit-return/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n//\n// export const retrieveReturns = () =>\n//   loadAPI('/return-table/', {\n//     method: 'GET',\n//     secure: true,\n//   });\n\nexport const retrieveReturns = (id) =>\n  loadAPI('/return-received/', {\n    method: 'GET',\n    secure: true,\n    params: {id},\n  });\n//\n// export const retrieveReturns = () =>\n//   loadAPI('/return-table/', {\n//     method: 'GET',\n//     secure: true,\n//   });\n\nexport const deleteReturn = (id) =>\n  loadAPI(`/edit-return/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const retrieveRFlows = () =>\n  loadAPI('/r-flows/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const createReceived = (req) =>\n  loadAPI('/create-received/', {\n    method: 'POST',\n    data: req,\n    secure: true,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\n\nexport const editReceived = (id, req) =>\n  // loadAPI(`/edit-received/${id}/`, {\n  loadAPI(`/e-received/${id}/`, {\n    method: 'PATCH',\n    data: req,\n    secure: true,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\n\nexport const retrieveReceived = (id) =>\n  loadAPI(`/edit-received/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const deleteReceived = (id) =>\n  loadAPI(`/edit-received/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const allDelivered = () =>\n  loadAPI('/delivered/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const allInward = () =>\n  loadAPI('/inward/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const allReceived = () => loadAPI('/received/', {});\n\nexport const retrieveGRNBars = (id) =>\n  loadAPI(`/grn-barcodes/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveGRNBarCodes = (id) =>\n  loadAPI(`/print-barcodes/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveAllotmentReport = ({cname, to, from}) =>\n  loadAPI(`/allotment-reports/`, {\n    method: 'GET',\n    secure: true,\n    params: {\n      cname,\n      to,\n      from,\n    },\n  });\n\nexport const retrieveStockingReport = ({to, from, cname}) =>\n  loadAPI(`/floating-report/`, {\n    method: 'GET',\n    secure: true,\n    params: {\n      to,\n      from,\n      cname,\n    },\n  });\n\nexport const retrieveReturnReport = ({cname, to, from}) =>\n  loadAPI(`/return-reports/`, {\n    method: 'GET',\n    secure: true,\n    params: {\n      cname,\n      to,\n      from,\n    },\n  });\n\nexport const retrieveAllotmentsDelivered = (id) =>\n  loadAPI('/allotments-delivered/', {\n    method: 'GET',\n    secure: true,\n    params: {id},\n  });\n\nexport const retrieveDocketOutwardInward = (id) =>\n  loadAPI('/outward-inward/', {\n    method: 'GET',\n    secure: true,\n    params: {id},\n  });\n\nexport const retrieveReturnDocket = (id) =>\n  loadAPI('/return-docket/', {\n    method: 'GET',\n    secure: true,\n    params: {\n      id,\n    },\n  });\n\nexport const retrieveReturnDocketCaleder = (id) =>\n  loadAPI(`/returns-cal/?tno=${id}`, {\n    method: 'GET',\n    secure: false,\n  });\n\nexport const createLead = (data) =>\n  loadAPI('/create-leads/', {\n    method: 'POST',\n    secure: true,\n    data,\n  });\n\nexport const retrieveLeads = () =>\n  loadAPI('/leads/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrieveCP = () =>\n  loadAPI('/cp/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const retrievePFEP = () =>\n  loadAPI('/pfep/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const editLead = (id, data) =>\n  loadAPI(`/edit-leads/${id}/`, {\n    method: 'PATCH',\n    secure: true,\n    data,\n  });\n\nexport const retrieveLead = (id) =>\n  loadAPI(`/edit-leads/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const deleteLead = (id) =>\n  loadAPI(`/edit-leads/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const postAltBarcodes = (data) => {\n  return loadAPI('dispatch-allotment/', {\n    method: 'POST',\n    secure: true,\n    data,\n  });\n};\n\nexport const postReturnBarcodes = (data) => {\n  return loadAPI('dispatch-return/', {\n    method: 'POST',\n    secure: true,\n    data,\n  });\n};\nexport const createPFEP = (data) => {\n  return loadAPI('create-pfep/', {\n    method: 'POST',\n    secure: true,\n    data,\n  });\n};\n\nexport const deletePFEP = (id) =>\n  loadAPI(`/edit-pfep/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const editPFEP = (id, data) =>\n  loadAPI(`/edit-pfep/${id}/`, {\n    method: 'PATCH',\n    secure: true,\n    data,\n  });\n\nexport const createCP = (data) => {\n  return loadAPI('create-cp/', {\n    method: 'POST',\n    secure: true,\n    data,\n  });\n};\n\nexport const deleteCP = (id) =>\n  loadAPI(`/edit-cp/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const editCP = (id, data) =>\n  loadAPI(`/edit-cp/${id}/`, {\n    method: 'PATCH',\n    secure: true,\n    data,\n  });\n\nexport const retrieveTestInv = (data) => {\n  return loadAPI('inv-items/', {\n    method: 'GET',\n    secure: true,\n    data,\n  });\n};\n\nexport const createTestInv = (data) => {\n  return loadAPI('create-inv/', {\n    method: 'POST',\n    secure: true,\n    data,\n  });\n};\n\nexport const deleteTestInv = (id) =>\n  loadAPI(`/edit-inv/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const createMRStatus = (data) => {\n  return loadAPI('create-mrstatus/', {\n    method: 'POST',\n    secure: true,\n    data,\n  });\n};\n\nexport const createExpense = (src) =>\n  loadAPI('/create-expense/', {\n    method: 'POST',\n    data: src,\n    secure: true,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\n\nexport const retrieveExpenses = () =>\n  loadAPI('/expenses/', {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const deleteExpense = (id) =>\n  loadAPI(`/edit-expense/${id}/`, {\n    method: 'DELETE',\n    secure: true,\n  });\n\nexport const retrieveExpense = (id) =>\n  loadAPI(`/edit-expense/${id}/`, {\n    method: 'GET',\n    secure: true,\n  });\n\nexport const editExpense = (id, src) =>\n  loadAPI(`/edit-expense/${id}/`, {\n    method: 'PATCH',\n    data: src,\n    secure: true,\n  });\n\nexport const editExpenseTest = (id, src) =>\n  loadAPI(`/ed-expense/${id}/`, {\n    method: 'PATCH',\n    data: src,\n    secure: true,\n    headers: {\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\n    },\n  });\n","export const ACCESS_TOKEN = 'ACCESS_TOKEN';\nexport const REFRESH_TOKEN = 'REFRESH_TOKEN';\n","export const getStorage = () => (window ? window.storage : global.storage);\n","import React, { useState , useEffect } from 'react';\nimport { Row, Col, Typography, Spin } from 'antd';\nimport { Table } from 'react-bootstrap';\nimport moment from 'moment';\n\nimport { retrieveAllotments, retrieveAllotmentsCalender } from 'common/api/auth';\n\nimport './docket.styles.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst { Title } = Typography;\n\nconst Docket = ({ location,match }) => {\n  const [allotment, setAllotment] = useState(null);\n  const [total, setTotal] = useState(0);\n\n  useEffect(async () => {\n    const fetchAllotment = async () => {\n      if(location.state){\n        if(location.state.id){\n          const { data } = await retrieveAllotmentsCalender(location.state.id);\n          // const { data } = await retrieveAllotments(location.state.id);\n          if (data) setAllotment(data);\n        }}\n      else{\n        const len = location.pathname.length\n        const id = location.pathname.slice(17,len);\n        const { data } = await retrieveAllotmentsCalender(id)\n        console.log(data,id,\"ye wala\")\n        if (data) setAllotment(data);\n      }\n    };\n    fetchAllotment();\n  }, [location]);\n\n  useEffect(() => {\n    const calcTotal = () => {\n      let tot = 0;\n      if (allotment) {\n        allotment.flows.map((flow) => {\n          const alloted = flow.alloted_quantity;\n          flow.kit.products.map((prod) => {\n            tot += alloted * prod.quantity * prod.product.priceperunit;\n            return null;\n          });\n          return null;\n        });\n      }\n      setTotal(tot);\n    };\n    calcTotal();\n  }, [allotment]);\n\n  const a = [\n    '',\n    'one ',\n    'two ',\n    'three ',\n    'four ',\n    'five ',\n    'six ',\n    'seven ',\n    'eight ',\n    'nine ',\n    'ten ',\n    'eleven ',\n    'twelve ',\n    'thirteen ',\n    'fourteen ',\n    'fifteen ',\n    'sixteen ',\n    'seventeen ',\n    'eighteen ',\n    'nineteen ',\n  ];\n  const b = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\n\n  function inWords(num) {\n    if ((num = num.toString()).length > 9) return 'overflow';\n    const n = (`000000000${  num}`).substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\n    if (!n) return;\n    let str = '';\n    str += n[1] != 0 ? `${a[Number(n[1])] || `${b[n[1][0]]  } ${  a[n[1][1]]}`  }crore ` : '';\n    str += n[2] != 0 ? `${a[Number(n[2])] || `${b[n[2][0]]  } ${  a[n[2][1]]}`  }lakh ` : '';\n    str += n[3] != 0 ? `${a[Number(n[3])] || `${b[n[3][0]]  } ${  a[n[3][1]]}`  }thousand ` : '';\n    str += n[4] != 0 ? `${a[Number(n[4])] || `${b[n[4][0]]  } ${  a[n[4][1]]}`  }hundred ` : '';\n    str +=\n      n[5] != 0\n        ? `${(str != '' ? 'and ' : '') + (a[Number(n[5])] || `${b[n[5][0]]  } ${  a[n[5][1]]}`)  }only `\n        : '';\n    return str;\n  }\n\n  if (allotment)\n    return (\n      <div className='container-docket'>\n        <div className='header-docket'>\n          <div className='logo-docket'>\n            <img src={`${process.env.PUBLIC_URL  }/home-logo.png`} alt='Yantraksh' />\n          </div>\n          <div className='heading-docket'>\n            <Title level={2} style={{ fontWeight: 'bold' }}>\n              DELIVERY CHALLAN\n            </Title>\n          </div>\n        </div>\n        <hr />\n        <Row className='meta-docket'>\n          <Col span={17} className='left'>\n            <Row>\n              <Col span={22}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Transaction No. : </p>\n                <p style={{ display: 'inline' }}>{allotment.transaction_no}</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={22}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Transaction Date : </p>\n                <p style={{ display: 'inline' }}>{moment(allotment.dispatch_date).format('DD/MM/YYYY')}</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={22}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Dispatch Date : </p>\n                <p style={{ display: 'inline' }}>{moment(allotment.dispatch_date).format('DD/MM/YYYY')}</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={22}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Transaction Type : Allot</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={22}>\n                <p style={{ display: 'inline', fontWeight: 'bold' }}>\n                  KIT ID : &nbsp;\n                  {allotment.flows.map((flow, idx) => {\n                    if (flow.alloted_quantity>0) {\n                      //if (idx===allotment.flows.length-1) return flow.kit.kit_name.slice(3);\n                      return `${flow.kit.kit_name.slice(3)}, `;\n                    }\n                  })}\n                </p>\n              </Col>\n            </Row>\n          </Col>\n          <Col\n            span={7}\n            className='right'\n            style={{\n              fontFamily: 'Arial, Helvetica, sans-serif',\n            }}>\n            <p>\n              [ &nbsp;] Original for Consignee\n              {' '}\n              <br />\n              {' '}\n              [ &nbsp;] Duplicate for Transporter\n              {' '}\n              <br />\n              [\n              &nbsp;] Triplicate for Consignor\n            </p>\n          </Col>\n        </Row>\n        <div className='main-data-docket'>\n          <Row>\n            <Col span={12}>\n              <Row>\n                <Col span={10}>\n                  <p style={{ fontWeight: 'bold' }}>Sender's Name : </p>\n                </Col>\n                <Col span={12} style={{ wordWrap: 'break-word' }}>\n                  {allotment.send_from_warehouse.name}\n                </Col>\n              </Row>\n            </Col>\n            <Col span={12}>\n              <Row>\n                <Col span={10}>\n                  <p style={{ fontWeight: 'bold' }}>Receiver's Name : </p>\n                </Col>\n                <Col span={12} style={{ wordWrap: 'break-word' }}>\n                  {allotment.flows[0].flow.sender_client.client_name}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={12}>\n              <Row>\n                <Col span={10}>\n                  <p style={{ fontWeight: 'bold' }}>Sender's Address : </p>\n                </Col>\n                <Col span={12} style={{ wordWrap: 'break-word' }}>\n                  {`${allotment.send_from_warehouse.address \n                  }, ${ \n                    allotment.send_from_warehouse.city \n                  }, ${ \n                    allotment.send_from_warehouse.state \n                  }, ${ \n                    allotment.send_from_warehouse.pincode}`}\n                </Col>\n              </Row>\n            </Col>\n            <Col span={12}>\n              <Row>\n                <Col span={10}>\n                  <p style={{ fontWeight: 'bold' }}>Receiver's Address : </p>\n                </Col>\n                <Col span={12} style={{ wordWrap: 'break-word' }}>\n                  {`${allotment.flows[0].flow.sender_client.client_shipping_address \n                  }, ${ \n                    allotment.flows[0].flow.sender_client.client_shipping_city \n                  }, ${ \n                    allotment.flows[0].flow.sender_client.client_shipping_state \n                  }, ${ \n                    allotment.flows[0].flow.sender_client.client_shipping_pincode}`}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={12}>\n              <Row>\n                <Col span={10}>\n                  <p style={{ fontWeight: 'bold' }}>GST : </p>\n                </Col>\n                <Col span={12} style={{ wordWrap: 'break-word' }}>\n                  {allotment.send_from_warehouse.gst}\n                </Col>\n              </Row>\n            </Col>\n            <Col span={12}>\n              <Row>\n                <Col span={10}>\n                  <p style={{ fontWeight: 'bold' }}>GST : </p>\n                </Col>\n                <Col span={12} style={{ wordWrap: 'break-word' }}>\n                  {allotment.flows[0].flow.sender_client.client_gst}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </div>\n        <Row className='table-docket'>\n          <Table bordered size='sm'>\n            <thead>\n              <tr>\n                <th>Kit ID</th>\n                <th>Kit Name</th>\n                <th>Quantity</th>\n                <th>HSN/SAC</th>\n                <th>Product Code</th>\n                <th>Product Name</th>\n                <th>Product Qty</th>\n              </tr>\n            </thead>\n            <tbody>\n              {allotment.flows.map((flow) => {\n                if (flow.alloted_quantity > 0) {\n                  return (\n                  <tr>\n                    <td>{flow.kit.kit_name}</td>\n                    <td>{flow.kit.kit_info}</td>\n                    <td>{flow.alloted_quantity}</td>\n                    <td>\n                      {flow.kit.products.map((prod) => (\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                          <p>{prod.product.hsn_code}</p>\n                        </div>\n                      ))}\n                    </td>\n                    <td>\n                      {flow.kit.products.map((prod) => (\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                          <p>{prod.product.short_code}</p>\n                        </div>\n                      ))}\n                    </td>\n                    <td>\n                      {flow.kit.products.map((prod) => (\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                          <p>{prod.product.name}</p>\n                        </div>\n                      ))}\n                    </td>\n                    <td>\n                      {flow.kit.products.map((prod) => (\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                          <p>{prod.quantity * flow.alloted_quantity}</p>\n                        </div>\n                      ))}\n                    </td>\n                  </tr>\n                );\n                } else {\n                  return null;\n                }\n              }\n              )}\n            </tbody>\n          </Table>\n        </Row>\n        <Row className='final-docket'>\n          <Col span={12}>\n            <Row>\n              <Col span={7}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Amount in Words : </p>\n              </Col>\n              <Col span={16}>\n                <p style={{ display: 'inline', wordWrap: 'break-word', textTransform: 'capitalize' }}>\n                  {`${String.fromCharCode(0x20b9)  } ${  inWords(total)}`}\n                </p>\n              </Col>\n              <br />\n            </Row>\n            <Row>\n              <Col span={24}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>SO No. : </p>\n                <p style={{ display: 'inline' }}>{allotment.sales_order.id}</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Transporter Name : </p>\n                <p style={{ display: 'inline', wordWrap: 'break-word' }}>\n                  {allotment.transport_by.name}\n                </p>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Driver Name : </p>\n                <p style={{ display: 'inline', wordWrap: 'break-word' }}>{allotment.driver_name}</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Driver No. : </p>\n                <p style={{ display: 'inline', wordWrap: 'break-word' }}>{allotment.driver_number}</p>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col span={12}>\n            <Row>\n              <Col span={24}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Grand Total : </p>\n                <p style={{ fontWeight: 'bold', display: 'inline', wordWrap: 'break-word' }}>\n                  {`${String.fromCharCode(0x20b9)  } ${  total}`}\n                </p>\n              </Col>\n            </Row>\n            {/* <Row> */}\n            {/*  <Col span={24}> */}\n            {/*    <p style={{ fontWeight: 'bold', display: 'inline' }}>Creation Date : </p> */}\n            {/*    <p style={{ display: 'inline', wordWrap: 'break-word' }}> */}\n            {/*      {`${new Date().getDate().toString() */}\n            {/*      }/${ */}\n            {/*        new Date().getMonth().toString() */}\n            {/*      }/${ */}\n            {/*        new Date().getFullYear().toString()}`} */}\n            {/*    </p> */}\n            {/*  </Col> */}\n            {/* </Row> */}\n            <Row>\n              <Col span={24}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Vehicle No. : </p>\n                <p style={{ display: 'inline', wordWrap: 'break-word' }}>\n                  {allotment.vehicle_number}\n                </p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <hr />\n        <table style={{ pageBreakInside: 'avoid' }}>\n          <div className='declaration'>\n            <p style={{ fontWeight: 'bold', display: 'inline' }}>Declaration : </p>\n            <p style={{ display: 'inline' }}>\n              The packaging products given on hire shall always remain the property of Yantraksh\n              Logistics Private Limited and shall not be used for the purpose otherwise agreed upon.\n              The same shall be returned at the address notified by Yantraksh Logistics Private\n              Limited.\n            </p>\n            <br />\n            <p style={{ fontWeight: 'bold', display: 'inline' }}>Note : </p>\n            <p style={{ display: 'inline' }}>\n              {' '}\n              No E-Way Bill is required for Empty Cargo Containers. Refer, Rule 14 of Central Goods\n              and Services Tax (Second Amendment) Rules, 2018.\n            </p>\n          </div>\n        </table>\n\n        <hr />\n        <table style={{ pageBreakInside: 'avoid', width: '90vw' }}>\n          <div className='footer'>\n            <Row>\n              <Col span={1} />\n              <Col span={11} style={{ fontWeight: 'bold' }}>\n                For Sending Location :\n              </Col>\n              <Col span={6} />\n              <Col span={6} style={{ fontWeight: 'bold' }}>\n                For Receiving Location :\n              </Col>\n            </Row>\n            <br />\n            {' '}\n            <br />\n            <br />\n            <Row>\n              <Col span={1} />\n              <Col span={11} style={{ fontWeight: 'bold' }}>\n                Authorized Signature\n              </Col>\n              <Col span={6} />\n              <Col span={6} style={{ fontWeight: 'bold' }}>\n                Authorized Signature\n              </Col>\n            </Row>\n            <Row>\n              <Col span={1} />\n              <Col span={11}>(Company Seal & Signature)</Col>\n              <Col span={6} />\n              <Col span={6}>(Company Seal & Signature)</Col>\n            </Row>\n            <br />\n            {' '}\n            <br />\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'Center',\n                alignItems: 'center',\n                flexDirection: 'column',\n                padding: '0',\n                margin: '0',\n              }}>\n              <p style={{ fontSize: '26px', color: '#034efc' }}>\n                Yantraksh Logistics Private Limited\n              </p>\n              <p>CIN No: U74999GJ2018PTC105552</p>\n            </div>\n          </div>\n        </table>\n      </div>\n    );\n  return (\n    <Spin spinning style={{ position: 'absolute', marginLeft: '49vw', marginTop: '49vh' }} />\n  );\n};\n\nexport default Docket;\n"],"sourceRoot":""}